#!/usr/bin/env bash 
#set -x
#set -e 

function usage() {
    echo "Tanka Docker - renders Tanka configs"
    echo ""
    echo "Usage: $0 [-i|--input] <tanka directory> [-o|--output] <manifest directory> "
    echo ""
    echo "Optional flags:"
    echo ""
    echo "  [-e|--environment]  - Tanka environment to render"
    echo "  [--interactive]     - Mounts the directories but drops you into a shell"
    echo "  [--explore]         - Opens a shell, but doesn't require mounted dirs"
    echo "  [-h|--help]         - This help text"
    echo ""
}

INTERACTIVE=false
ENVIRONMENT=default

_setArgs() {
    while [ "${1:-}" != "" ]; do
        case "$1" in
            "-h" | "--help")
                usage
                exit
                ;;
            "--interactive")
                INTERACTIVE=true
                ;;
            "--explore")
                INTERACTIVE=true
                EXPLORE=true
                ;;
            "-i" | "--input")
                shift
                CFGPATH="$(readlink -f $1)"
                ;;
            "-o" | "--output")
                shift
                OUTPUTDIR="$(readlink -f $1)"
                ;;
            "-e" | "--environment")
                shift
                ENVIRONMENT="$1"
                ;;
        esac
        shift
    done
}

_setArgs $*

echo $CFGPATH
echo $OUTPUTDIR

# We don't want to enforce config paths for exploration
if [ "$EXPLORE" != "true" ] ; then 
   if [[ -z "$CFGPATH" || -z "$OUTPUTDIR" ]] ; then 
       usage
       exit 1
   fi
fi
USERSTR=""
if [ "$INTERACTIVE" == 'true' ] ; then 
    COMMAND="bash"
   # Lets not overwrite the uid/gid interactively, to prevent
   # messy "I have no name!" messages.
   USERSTR=""
else
   # We want to run this as the user, so it's owned by them 
   # when it's complete. 
   USERSTR="-u $UID:$GID" 
   COMMAND="tk export /config/environments/${ENVIRONMENT} /output/"
fi

CFGMOUNT=""
if [ ! -z "$CFGPATH" ] ; then 
    CFGMOUNT="--mount type=bind,source="$CFGPATH",target=/config"
fi

OUTPUTMOUNT=""
if [ ! -z "$OUTPUTDIR" ] ; then
    OUTPUTMOUNT="--mount type=bind,source="$OUTPUTDIR",target=/output"
fi

GROUP="$(groups | awk '{print $1}')"
GID="$(getent group ${GROUP} | awk -F: '{print $3}')"

docker run -it --rm --name tanka \
    $USERSTR \
    $CFGMOUNT \
    $OUTPUTMOUNT \
    docker-tanka:latest $COMMAND
